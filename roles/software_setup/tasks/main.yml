---
# tasks file for software_setup
- name: Add signing Google key
  ansible.builtin.get_url:
    url: "https://dl.google.com/linux/linux_signing_key.pub"
    dest: /etc/apt/trusted.gpg.d/google_linux_signing_key.asc
    force: true
    mode: "0644"

- name: Add google-chrome repository into sources list
  ansible.builtin.apt_repository:
    repo: deb [arch=amd64] https://dl.google.com/linux/chrome/deb/ stable main
    state: present
    filename: google-chrome

- name: Add signing Hashicorp key
  ansible.builtin.get_url:
    url: "https://apt.releases.hashicorp.com/gpg"
    dest: /etc/apt/trusted.gpg.d/hashicorp_signing_key.asc
    force: true
    mode: "0644"

- name: Add terraform repository into sources list
  ansible.builtin.apt_repository:
    repo: deb [arch=amd64] https://apt.releases.hashicorp.com {{ ansible_distribution_release }} main
    state: present
    filename: hashicorp

- name: Add Helm signing key
  ansible.builtin.get_url:
    url: "https://baltocdn.com/helm/signing.asc"
    dest: /etc/apt/trusted.gpg.d/helm_signing_key.asc
    force: true
    mode: "0644"

- name: Add helm repository into sources list
  ansible.builtin.apt_repository:
    repo: deb [arch=amd64] https://baltocdn.com/helm/stable/debian/ all main
    state: present
    filename: helm-stable-debian

- name: Get sublimetext repo key
  ansible.builtin.get_url:
    url: "https://download.sublimetext.com/sublimehq-pub.gpg"
    dest: /etc/apt/trusted.gpg.d/sublimehq-pub.asc
    force: true
    mode: "0644"
  tags:
    - sublimetext

- name: Add sublimetext repository into sources list
  ansible.builtin.apt_repository:
    repo: deb [arch=amd64] https://download.sublimetext.com/ apt/stable/
    state: present
    filename: sublime-text
  tags:
    - sublimetext

- name: Add veracrypt repository into sources list
  ansible.builtin.apt_repository:
    repo: ppa:unit193/encryption
    state: present
  tags:
    - veracrypt

- name: Get surfshark deb-file
  ansible.builtin.get_url:
    url: "https://ocean.surfshark.com/debian/pool/main/s/surfshark-release/surfshark-release_1.0.0-2.1_amd64.deb"
    dest: /tmp/
    force: false
    mode: "0644"
  tags:
    - surfshark

- name: Install surfshark deb-package
  ansible.builtin.apt:
    deb: /tmp/surfshark-release_1.0.0-2.1_amd64.deb
  tags:
    - surfshark

- name: Add AnyDesk repository key
  ansible.builtin.get_url:
    url: "https://keys.anydesk.com/repos/DEB-GPG-KEY"
    dest: /etc/apt/trusted.gpg.d/anydesk.asc
    force: true
    mode: "0644"
  tags:
    - anydesk

- name: Add AnyDesk repository into sources list
  ansible.builtin.apt_repository:
    repo: deb [arch=amd64] http://deb.anydesk.com/ all main
    state: present
    filename: anydesk-stable
  tags:
    - anydesk

- name: Add Docker repository key
  ansible.builtin.get_url:
    url: "https://download.docker.com/linux/ubuntu/gpg"
    dest: /etc/apt/trusted.gpg.d/docker-archive-keyring.asc
    force: true
    mode: "0644"
  tags:
    - docker

- name: Add Docker repository into sources list
  ansible.builtin.apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
    state: present
    filename: docker
  tags:
    - docker

- name: Install packages
  ansible.builtin.apt:
    name: "{{ packages }}"
    state: present
    update_cache: true
  vars:
    packages: # TODO move packages to variable
      - "smartmontools"
      - "mc"
      - "blueman"
      - "xfce4-taskmanager"
      - "git"
      - "xterm"
      - "terminator"
      - "zsh"
      - "curl"
      - "wget"
      - "gpg"
      - "gnupg2"
      - "python3"
      - "google-chrome-stable"
      - "software-properties-common"
      - "terraform"
      - "python3-pip"
      - "apt-transport-https"
      - "helm"
      - "virtualbox-7.0"
      - "sublime-text"
      - "veracrypt"
      - "vlc"
      - "surfshark-vpn"
      - "anydesk"
      - "krusader"
      - "telegram-desktop"
      - "ca-certificates"
      - "docker-ce"
      - "libreoffice"
      - "exa"
      - "xsane"
      - "vim"
      - "transmission"
      - "putty"
      - "minicom"
      - "solaar"
      - "7zip"

  tags:
    - packages

- name: Copy terminator config file to directory
  ansible.builtin.copy:
    src: terminator/config
    dest: /home/cableman/.config/terminator/
    owner: cableman
    group: cableman
    mode: "0664"
    force: true
  tags:
    - terminator

- name: Set terminator as default terminal emulator in alternatives list
  community.general.alternatives:
    name: x-terminal-emulator
    path: /usr/bin/terminator
  tags:
    - terminator

# https://gandrille.github.io/linux-notes/Desktop_environments/Xfce/Exo.html
- name: Set terminator as default terminal emulator for xfce
  ansible.builtin.lineinfile:
    path: /home/cableman/.config/xfce4/helpers.rc
    regexp: "^TerminalEmulator="
    line: "TerminalEmulator=terminator"
    state: present
    create: true
    owner: cableman
    group: cableman
    mode: "0664"
  tags:
    - terminator

- name: Install oh-my zsh
  ansible.builtin.git:
    repo: https://github.com/ohmyzsh/ohmyzsh.git
    dest: /home/cableman/.oh-my-zsh
    force: true
    version: HEAD
    depth: 1
  tags:
    - zsh

- name: Install zsh-syntax-highlighting plugin
  ansible.builtin.git:
    repo: https://github.com/zsh-users/zsh-syntax-highlighting.git
    dest: /home/cableman/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting
    force: true
    version: HEAD
    depth: 1
  tags:
    - zsh

- name: Install zsh-autosuggestions plugin
  ansible.builtin.git:
    repo: https://github.com/zsh-users/zsh-autosuggestions
    dest: /home/cableman/.oh-my-zsh/custom/plugins/zsh-autosuggestions
    force: true
    version: HEAD
    depth: 1
  tags:
    - zsh

- name: Install powerlevel10k
  ansible.builtin.git:
    repo: "https://github.com/romkatv/powerlevel10k.git"
    dest: "/home/cableman/.oh-my-zsh/custom/themes/powerlevel10k"
    force: true
    version: HEAD
  tags:
    - zsh

- name: Set permmissions for .oh-my-zsh folder
  ansible.builtin.file:
    path: "/home/cableman/.oh-my-zsh"
    owner: cableman
    group: cableman
    mode: "go-w"
    recurse: true
  tags:
    - zsh

- name: Add i386 architecture
  ansible.builtin.command: dpkg --add-architecture i386
  register: my_output # <-Registers the command output.
  changed_when: my_output.rc != 0 # <-Uses the return code to define when the task has changed.
  tags:
    - wine

- name: Add key to apt keyring
  ansible.builtin.get_url:
    url: https://dl.winehq.org/wine-builds/winehq.key
    dest: /etc/apt/keyrings/winehq-archive.key
    mode: "0664"
    force: true
  tags:
    - wine

- name: Add wine sources
  ansible.builtin.get_url:
    url: https://dl.winehq.org/wine-builds/ubuntu/dists/{{ ansible_distribution_release }}/winehq-{{ ansible_distribution_release }}.sources
    dest: /etc/apt/sources.list.d/
    mode: "0644"
    force: true
  tags:
    - wine

- name: Install wine
  ansible.builtin.apt:
    name: winehq-stable
    state: present
    update_cache: true
    install_recommends: true
  tags:
    - wine

- name: Install ansible
  ansible.builtin.pip:
    name:
      - ansible
    extra_args: --user
  remote_user: cableman
  tags:
    - ansible

- name: Copy ansible config
  ansible.builtin.copy:
    src: ansible.cfg
    dest: /etc/ansible/
    owner: root
    group: root
    mode: "0644"
  tags:
    - ansible

- name: Install ansible-lint
  ansible.builtin.pip:
    name:
      - ansible-lint
    state: present
  tags:
    - ansible

- name: Install virtualbox and extpack
  ansible.builtin.import_tasks: install_virtualbox_and_extpack.yml
  tags:
    - virtualbox

- name: Download minikube
  ansible.builtin.get_url:
    url: https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
    dest: /usr/local/bin/minikube
    mode: "0755"
    force: false
  tags:
    - minikube

- name: Copy sublime_text settings and themes
  ansible.builtin.copy:
    src: sublimetext/Packages
    dest: /home/cableman/.config/sublime-text/
    owner: cableman
    group: cableman
    mode: "0644"
    force: true
  tags:
    - sublimetext

- name: Download surfshark installation script
  ansible.builtin.get_url:
    url: https://downloads.surfshark.com/linux/debian-install.sh
    dest: /tmp/
    mode: "0755"
    force: false
  tags:
    - surfshark

- name: Install surfshark
  ansible.builtin.command: sh /tmp/debian-install.sh
  register: my_output # <-Registers the command output.
  changed_when: my_output.rc != 0 # <-Uses the return code to define when the task has changed.
  tags:
    - surfshark

- name: Chek duf version
  ansible.builtin.command: duf --version
  register: duf_installed_version
  changed_when: duf_version != 0 # <-Uses the return code to define when the task has changed.
  tags:
    - duf
  ignore_errors: true

- name: Extract duf version from stdout
  block:
    - name: Duf installed version fact
      ansible.builtin.set_fact:
        duf_versionfact: "{{ duf_installed_version.stdout | trim }}"
      tags:
        - duf
    - name: Duf installed major version fact
      ansible.builtin.set_fact:
        duf_installed_version_fact: "{{ duf_versionfact.split(' ', 2)[1] }}"
      when: duf_installed_version.stdout != ""
      tags:
        - duf
    - name: Duf installed major version fact = "" when no duf installed
      ansible.builtin.set_fact:
        duf_installed_version_fact: ""
      when: duf_installed_version.stdout == ""
      tags:
        - duf

- name: Get duf
  ansible.builtin.get_url:
    url: "{{ duf_download_url }}"
    dest: /tmp
    mode: "0644"
    force: false
  when: duf_installed_version.stdout == ""
    or
    duf_installed_version_fact != duf_version
  register: duf_file
  tags:
    - "duf"

- name: Remove installed version of Duf
  ansible.builtin.apt:
    package:
      - duf
    state: absent
  when: duf_installed_version.stdout != ""
    and
    duf_installed_version_fact != duf_version
  tags:
    - "duf"

- name: Debug message
  ansible.builtin.debug:
    msg: "{{ duf_file }}"
  tags:
    - "duf"

- name: Install Duf from downloaded deb package
  ansible.builtin.apt:
    deb: "{{ duf_file['dest'] }}"
  when: duf_installed_version.stdout == ""
    or
    duf_installed_version_fact != duf_version
  tags:
    - "duf"

- name: Ensure that the user in Docker group
  ansible.builtin.user:
    name: cableman
    groups:
      - docker
    append: true
  tags:
    - docker

- name: Get Atari800 deb-file
  ansible.builtin.get_url:
    url: "{{ atari800_download_url }}"
    dest: /tmp
    mode: "0644"
    force: false
  register: atari800_file
  tags:
    - atari

- name: Install Atari800
  ansible.builtin.apt:
    deb: "{{ atari800_file['dest'] }}"
  tags:
    - atari

- name: Sync Atari800 directory
  ansible.posix.synchronize:
    src: /home/cableman/Atari
    dest: /home/cableman/
  become: false
  tags:
    - atari

- name: Copy Atari800 config
  ansible.posix.synchronize:
    src: /home/cableman/.atari800.cfg
    dest: /home/cableman/.atari800.cfg
  become: false
  tags:
    - atari
# TODO copy ansible linter config what fot?
# TODO vscode + settings
# drweb
# home printer
# Document Scanner
# nomacs
# okular
# foxit reader
# pinta
# Ristretto is an image viewer for the Xfce desktop environment
# gtk hash
# gnome-disks
# taskmanager
# Calculator
# screenshot
# GNOME Character Map
# Speed Crunch
# watsapp
# zoom
# wireshark
# wps office
# Kicad
# yEd Graph editor
# STM32 Cube IDE
# arduino IDE
# htop
