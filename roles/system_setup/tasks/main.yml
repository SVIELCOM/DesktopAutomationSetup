---
- name: Set permanent TTL
  ansible.builtin.lineinfile:
    path: /etc/sysctl.conf
    line: net.ipv4.ip_default_ttl=65
    create: false
  tags: "ttl"
# tasks file for system_setup
# Мозг себе взорвал, пока разобрался с json_query. Главное - следить за тем, какой тип данных скармливать следующему оператору
# https://jmespath.org/tutorial.html
# https://jmespath.org/specification.html#function-evaluation
# pip3 install jmespath-terminal далее - jpterm
- name: Hide ZFS pool's name from Thunar panel
  ansible.builtin.set_fact:
    devices_uuid: "{{ ansible_devices | json_query(jmesquery) }}"
  vars:
    jmesquery: "values(@)[].partitions.values(@)[].links[] | [?labels[].ends_with(@, 'pool')].uuids[]"
- name: Show all values for selected device name
  ansible.builtin.debug:
    var: devices_uuid
    verbosity: 4

- name: Adding lines in udev rules file for hiding partitions
  ansible.builtin.lineinfile:
    path: /etc/udev/rules.d/99-hidedrives.rules
    line: SUBSYSTEM=="block", ENV{ID_FS_UUID}=="{{ item }}", ENV{UDISKS_IGNORE}="1"
    mode: "0644"
    create: true
  loop: "{{ devices_uuid }}"
# This thing doesn't work. ansible not opening ssh with X11Forward key
# Worth checking out later
# -name: Setup mouse middle button
# ansible.builtin.command:
# xmodmap -e "pointer = 1 0 3 4 5 6 7 2"
# register: my_output # <-Registers the command output.
# changed_when: my_output.rc != 0 # <-Uses the return code to define when the task has changed.

# - name: Ensure a locale is installed
#   ansible.builtin.apt:
#     name: en_NZ.utf8
#     state: present

- name: Create symbolic link on /mnt/storage/Install
  ansible.builtin.file:
    src: /mnt/storage/Install
    dest: /home/cableman/Install
    state: link
    owner: cableman
    group: cableman
    force: false
  become: false
  when: ansible_form_factor == "Desktop"
  tags:
    - symlinks

# TODO Add symbolic links for laptop

- name: Copy Saleae Logic Analizer icon
  ansible.builtin.copy:
    src: SaleaeLogic.svg
    dest: /home/cableman/Install
    owner: cableman
    group: cableman
    mode: "0664"
  become: false
  tags:
    - logicanalyzer

- name: Setup time locale
  ansible.builtin.command: update-locale LC_TIME=en_NZ.utf8
  register: my_output # <-Registers the command output.
  changed_when: my_output.rc != 0 # <-Uses the return code to define when the task has changed.

- name: Check directory xfce-config exists
  ansible.builtin.stat:
    path: /home/cableman/.config/xfce4/xfconf/xfce-perchannel-xml/
  register: xfce_conf_dir_exists
  tags:
    - xfce

- name: Copy files for xfce (Desktop)
  ansible.builtin.copy:
    src: desktop/xfce-perchannel-xml/
    dest: /home/cableman/.config/xfce4/xfconf/xfce-perchannel-xml/
    owner: cableman
    group: cableman
    mode: "0664"
    force: true
  when:
    - xfce_conf_dir_exists.stat.exists
    - ansible_form_factor == "Desktop"
  tags:
    - xfce

- name: Copy files for xfce (Laptop)
  ansible.builtin.copy:
    src: laptop/xfce-perchannel-xml/
    dest: /home/cableman/.config/xfce4/xfconf/xfce-perchannel-xml/
    owner: cableman
    group: cableman
    mode: "0664"
    force: true
  when:
    - xfce_conf_dir_exists.stat.exists
    - ansible_form_factor == "Notebook"
  tags:
    - xfce

- name: Copy xfce panel directory (Desktop)
  ansible.builtin.copy:
    src: desktop/panel
    dest: /home/cableman/.config/xfce4/
    mode: "0666"
    #    directory_mode: true
    force: true
    owner: cableman
    group: cableman
  when: ansible_form_factor == "Desktop"
  tags:
    - xfce

- name: Copy xfce panel directory (Laptop)
  ansible.builtin.copy:
    src: laptop/panel
    dest: /home/cableman/.config/xfce4/
    mode: "0666"
    #    directory_mode: true
    force: true
    owner: cableman
    group: cableman
  when: ansible_form_factor == "Notebook"
  tags:
    - xfce


- name: Collect files to delete
  ansible.builtin.find:
    paths: /home/cableman/.config/xfce4/xfconf/xfce-perchannel-xml
    patterns: "*@*~"
  register: files_to_delete
  tags:
    - xfce

- name: Delete all files in .config/xfce4/xfconf/xfce-perchannel-xml/ contain @ and ~ in the names
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ files_to_delete.files }}"
  notify: restart_xfdesktop
  tags:
    - xfce

- name: Copy .bashrc and zshrc (Desktop)
  ansible.builtin.copy:
    src: desktop/{{ item }}
    dest: /home/cableman/
    owner: cableman
    group: cableman
    mode: "0644"
    force: true
  with_items:
    - .bashrc
    - .bash_aliases
    - .zshrc
    - .p10k.zsh
  when: ansible_form_factor == "Desktop"

- name: Copy .bashrc and zshrc (Laptop)
  ansible.builtin.copy:
    src: laptop/{{ item }}
    dest: /home/cableman/
    owner: cableman
    group: cableman
    mode: "0644"
    force: true
  with_items:
    - .bashrc
    - .bash_aliases
    - .zshrc
    - .p10k.zsh
  when: ansible_form_factor == "Notebook"
  tags:
    - copy_rcs

- name: Ensure ZSH set as default shell
  ansible.builtin.user:
    name: cableman
    shell: /usr/bin/zsh
    state: present
  tags:
    - zsh

# - name: Copy ohmyzsh.sh
#   ansible.builtin.copy:
#     src: oh-my-zsh.sh
#     dest: /home/cableman/.oh-my-zsh/
#     owner: cableman
#     group: cableman
#     mode: "0644"
#     force: true
#   tags:
#     - zsh

- name: Delete file for disable help information on welcome ssh console
  ansible.builtin.file:
    path: /etc/update-motd.d/10-help-text
    state: absent
    force: true

- name: Edit /etc/bluetooth/input.conf for IdleTimeout=0
  ansible.builtin.lineinfile:
    path: /etc/bluetooth/input.conf
    regexp: "IdleTimeout="
    line: IdleTimeout=0
    mode: "0644"
    create: false
  notify: Bluetooth_restart

- name: Edit /etc/bluetooth/main.conf for FastConnectable=true
  ansible.builtin.lineinfile:
    path: /etc/bluetooth/main.conf
    regexp: "FastConnectable ="
    line: FastConnectable = true
    mode: "0644"
    create: false
  notify: Bluetooth_restart

- name: Config auto upgrades
  ansible.builtin.lineinfile:
    path: /etc/apt/apt.conf.d/20auto-upgrades
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    create: false
  loop:
    - {
        regexp: "APT::Periodic::Update-Package-Lists",
        line: 'APT::Periodic::Update-Package-Lists "0";',
      }
    - {
        regexp: "APT::Periodic::Unattended-Upgrade",
        line: 'APT::Periodic::Unattended-Upgrade "0";',
      }
  tags:
    - auto_upgrades

- name: Copy kill_vlc_on_resume.service
  ansible.builtin.copy:
    src: kill_vlc_on_resume.service
    dest: /etc/systemd/system/
    mode: "0644"
    force: false
  tags:
    - kill_vlc

- name: Enable service kill_vlc_on_resume
  ansible.builtin.service:
    name: kill_vlc_on_resume
    enabled: true
  tags:
    - kill_vlc

- name: Creating CUPS tmp location {{ cups_tmp_location }}
  ansible.builtin.file:
    path: "{{ cups_tmp_location }}"
    recurse: true
    state: directory
  tags:
    - printer

- name: Copy hp-plugin-install.exp install script #this from https://github.com/HP41/ansible-cups/blob/master/tasks/ppd_hp.yml
  ansible.builtin.copy:
    src: files/hp-plugin-install.exp
    dest: "{{ cups_tmp_location }}/hp-plugin-install.exp"
    force: true
    mode: a+rx
  tags:
    - printer

- name: Installing HP Plugin using an except script to avoid user interaction
  ansible.builtin.command: "{{ cups_tmp_location }}/hp-plugin-install.exp"
  register: my_output # <-Registers the command output.
  changed_when: my_output.rc != 0 # <-Uses the return code to define when the task has changed.
  tags:
    - printer

- name: Remove hp-plugin-install.exp install script
  ansible.builtin.file:
    path: "{{ cups_tmp_location }}/hp-plugin-install.exp"
    state: absent
  tags:
    - printer

- name: Ensure user added to group
  ansible.builtin.user:
    name: cableman
    groups:
      - lpadmin
    append: true
  tags:
    - printer

- name: Add printer
  ansible.builtin.command: "lpadmin -p {{ printer_name }} -E -v ipp://{{ printer_ip }}/ipp/print -m everywhere"
  register: my_output # <-Registers the command output.
  changed_when: my_output.rc != 0 # <-Uses the return code to define when the task has changed.
  tags:
    - printer

- name: Prevent huge size of xsession-errors file
  ansible.builtin.lineinfile:
    path: /etc/X11/Xsession
    regexp: "^ERRFILE="
    line: "ERRFILE=/dev/null"
    create: false
  tags:
    - xsession

- name: Ensure that the directory /home/cableman/.config/autostart/ exists
  ansible.builtin.file:
    path: /home/cableman/.config/autostart/
    state: directory
    mode: "775"
    owner: cableman
    group: cableman
  tags:
    - mbutton

- name: Copy desktop file for add middle mouse button
  ansible.builtin.copy:
    src: middle_mouse_button.desktop
    dest: /home/cableman/.config/autostart/
    mode: "0600"
    owner: cableman
    group: cableman
    force: true
  tags:
    - mbutton

- name: Copy desktop directory file to desktop directory
  ansible.builtin.copy:
    src: xfce-electronics.directory
    dest: /usr/share/desktop-directories
    mode: "0644"
  tags:
    - electronics_menu
# - name: Add lines in
#   community.general.xml:
#     path: /etc/xdg/menus/xfce-applications.menu.test
#     xpath: /Menu/Menu[Name='Education']
#     content: text
#   register: result
#   tags:
#     - electronics_menu

# TODO модуль lxml не завелся. Разобраться в следующие разы, когда на контроллере и на таргете будет одна и та же версия python
# - ansible.builtin.xml:
#     path: /etc/xdg/menus/xfce-applications.menu.test
#     xpath: /Menu/Menu[Name='Education']
#     content: text
#   register: result
#   tags:
#     - electronics_menu
# - ansible.builtin.debug:
#     var: result.matches|default([])
#   tags:
#     - electronics_menu
# Сейчас вставлен костыль в виде копирования всего файла
- name: Copy xfce-applications.menu
  ansible.builtin.copy:
    src: xfce-applications.menu
    dest: /etc/xdg/menus
    force: true
    mode: "0644"
  tags:
    - electronics_menu

- name: Copy xubuntu xfce-applications.menu
  ansible.builtin.copy:
    src: xubuntu-menu/xfce-applications.menu
    dest: /etc/xdg/xdg-xubuntu/menus
    force: true
    mode: "0644"
  tags:
    - electronics_menu
# - name: Insert line in file ~/.config/menus/xfce-applications.menu
#   ansible.builtin.lineinfile:
#     path: /home/cableman/.config/menus/xfce-applications.menu
#     #regexp: "<Menuname>Education</Menuname>"
#     insertafter: "<Menuname>Education</Menuname>"
#     line: "                <Menuname>Electronics</Menuname>"
#     state: present
#   tags:
#     - electronics_menu
- name: Copy ssh keys
  ansible.builtin.copy:
    src: /home/cableman/.ssh/{{ item }}
    dest: /home/cableman/.ssh/
    owner: cableman
    group: cableman
    mode: "0600"
  with_items:
    - "id_rsa"
    - "id_rsa.pub"
  tags:
    - ssh_keys

- name: Create an authorized_keys file with public ssh key
  ansible.posix.authorized_key:
    user: "cableman"
    key: "{{ lookup('file', '/home/cableman/.ssh/id_rsa.pub') }}"
    state: present
  tags:
    - ssh_keys

- name: Edit the grub config file
  ansible.builtin.lineinfile:
    path: /etc/default/grub
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    create: false
  loop:
    - {
        regexp: "^GRUB_TIMEOUT_STYLE=",
        line: 'GRUB_TIMEOUT_STYLE=menu',
      }
    - {
        regexp: "^GRUB_TIMEOUT=",
        line: 'GRUB_TIMEOUT=0',
      }
    - {
        regexp: "^GRUB_CMDLINE_LINUX_DEFAULT=",
        line: 'GRUB_CMDLINE_LINUX_DEFAULT=""',
      }
    - {
        regexp: "GRUB_TERMINAL=",
        line: 'GRUB_TERMINAL=console',
      }
  notify: update_grub
  tags:
    - grub_cfg

- name: Copy lightdm conf and greeter.conf (Desktop)
  ansible.builtin.copy:
    src: desktop/lightdm/
    dest: /etc/lightdm/
    force: true
    mode: "0644"
  when: ansible_form_factor == "Desktop"
  tags:
    - lightdm

- name: Copy lightdm conf and greeter.conf (Laptop)
  ansible.builtin.copy:
    src: laptop/lightdm/
    dest: /etc/lightdm/
    force: true
    mode: "0644"
  when: ansible_form_factor == "Notebook"
  tags:
    - lightdm

- name: Disabling swap
  ansible.builtin.command: "swapoff --all"
  register: my_output # <-Registers the command output.
  changed_when: my_output.rc != 0 # <-Uses the return code to define when the task has changed.
  tags:
    - swapoff

- name: Disable swap permanently, persist reboots
  ansible.builtin.replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
    replace: '# \1'
    backup: true
  tags:
    - swapoff

- name: Add lines to /etc/fstab
  ansible.builtin.lineinfile:
    path: /etc/fstab
    line: "{{ item }}"
    create: false
  loop:
    - "tmpfs  /tmp  tmpfs  defaults,noatime,mode=1777  0  0"
    - "tmpfs  /var/tmp  tmpfs  defaults,noatime,mode=1777  0  0"
  tags:
    - ssd_optimization

- name: Add lines to /etc/fstab (Laptop only)
  ansible.builtin.lineinfile:
    path: /etc/fstab
    line: "{{ item }}"
    create: false
  loop:
    - "tmpfs /var/log tmpfs defaults,noatime,mode=0755 0 0"
    - "tmpfs /var/log/apt tmpfs defaults,noatime 0 0"
  when: ansible_form_factor == "Notebook"
  tags:
    - ssd_optimization

- name: Set zfs pools options
  ansible.builtin.command: "zfs set {{ item }}"
  loop:
    - 'atime=off bpool'
    - 'relatime=off bpool'
    - 'overlay=off bpool'
    - 'recordsize=1M rpool'
    - 'atime=off rpool'
    - 'relatime=off rpool'
    - 'overlay=off rpool'
  register: my_output # <-Registers the command output.
  changed_when: my_output.rc != 0 # <-Uses the return code to define when the task has changed.
  tags:
    - ssd_optimization

- name: Ensure user added to dialout group for access to UART ports
  ansible.builtin.user:
    name: cableman
    groups:
      - dialout
    append: true

- name: Add lines to /etc/fstab (Laptop only) for NFS shares
  ansible.builtin.lineinfile:
    path: /etc/fstab
    line: "{{ item }}"
    create: false
  loop:
    - "10.3.255.65:/mnt/backup /mnt/nfs/vlad/backup            nfs _netdev,noauto,x-systemd.automount,x-systemd.mount-timeout=5,timeo=5,x-systemd.idle-timeout=1min 0 0"
    - "10.3.255.65:/mnt/storage /mnt/nfs/vlad/storage          nfs _netdev,noauto,x-systemd.automount,x-systemd.mount-timeout=5,timeo=5,x-systemd.idle-timeout=1min 0 0"
    - "10.3.255.65:/home/cableman /mnt/nfs/vlad/home           nfs _netdev,noauto,x-systemd.automount,x-systemd.mount-timeout=5,timeo=5,x-systemd.idle-timeout=1min 0 0"
  when: ansible_form_factor == "Notebook"
  tags:
    - nfs

- name: Copy seleae logic udev rules file
  ansible.builtin.copy:
    src: 99-SaleaeLogic.rules
    dest: /etc/udev/rules.d/
    mode: '0644'
  tags:
    - logicanalyzer
